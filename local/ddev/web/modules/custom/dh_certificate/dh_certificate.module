<?php

/**
 * @file
 * Primary module hooks for DH Certificate module.
 */

/**
 * Implements hook_module_implements_alter().
 */
function dh_certificate_module_implements_alter(&$implementations, $hook) {
  // Remove this hook since we don't need to alter module implementation order
}

/**
 * Implements hook_dh_dashboard_blocks().
 */
function dh_certificate_dh_dashboard_blocks() {
  if (!\Drupal::moduleHandler()->moduleExists('dh_dashboard')) {
    return [];
  }

  return [
    'certificate_progress' => [
      'title' => t('Certificate Progress'),
      'callback' => '\Drupal\dh_certificate\Controller\DHCertificateController::dashboardBlock',
      'weight' => 50,
      'theme' => 'dh_dashboard_progress',
    ],
    'certificate_requirements' => [
      'title' => t('Certificate Requirements'),
      'callback' => '\Drupal\dh_certificate\Controller\DHCertificateController::requirementsBlock',
      'weight' => 51,
      'theme' => 'dh_dashboard_requirements',
    ],
  ];
}

/**
 * Implements hook_theme().
 */
function dh_certificate_theme($existing, $type, $theme, $path) {
  return [
    'dh_certificate_progress' => [
      'variables' => [
        'progress' => NULL,
        'is_admin' => FALSE,
        'admin_url' => NULL,
        'debug' => NULL,
      ],
      'template' => 'dh-certificate-progress',
    ],
    'dh_certificate_progress_block' => [
      'variables' => [
        'progress' => NULL,
        'user' => NULL,
        'is_admin' => FALSE,
        'manage_url' => NULL,
        'attributes' => [],
      ],
      'template' => 'dh-certificate-progress-block',
    ],
    'dh_dashboard_progress' => [
      'variables' => [
        'progress' => NULL,
        'courses' => [],
        'completion' => [],
      ],
    ],
    'dh_dashboard_requirements' => [
      'variables' => [
        'requirements' => [],
        'remaining' => [],
      ],
    ],
    'certificate_progress_block' => [
      'variables' => [
        'progress' => NULL,
        'user' => NULL,
        'url' => NULL,
      ],
      'template' => 'dh-certificate-progress-block',
    ],
    'dh_certificate_requirements' => [
      'variables' => [
        'title' => NULL,
        'requirements' => [],
      ],
    ],
    'dh_certificate_course_listing' => [
      'variables' => [
        'title' => NULL,
        'categories' => [],
        'view_mode' => 'student',
        'paths' => [],
        'show_debug' => TRUE,  // Changed default to TRUE
        'default_view' => 'grid',
        'course_data' => [],
      ],
      'template' => 'dh-certificate-course-listing',
    ],
    'dh_certificate_admin_overview' => [
      'variables' => [
        'title' => NULL,
        'stats' => [],
      ],
    ],
    'dh_certificate_user_progress' => [
      'variables' => [
        'title' => NULL,
        'progress' => [],
      ],
    ],
    'dh_certificate_enrollment_list' => [
      'variables' => [
        'title' => NULL,
        'enrollments' => [],
      ],
      'template' => 'dh-certificate-enrollment-list',
    ],
    'dh_certificate_enrollment_form' => [
      'render element' => 'form',
      'template' => 'dh-certificate-enrollment-form',
    ],
        'dh_certificate_enrollment_delete_form' => [
      'render element' => 'form',
      'template' => 'dh-certificate-enrollment-delete-form',
    ],
    'dh_certificate_monitor_overview' => [
      'variables' => [
        'monitors' => [],
      ],
    ],
    'dh_certificate_monitor_detail' => [
      'variables' => [
        'monitor_id' => NULL,
        'changes' => [],
        'last_checked' => NULL,
      ],
    ],
    'dh_certificate_structure_monitor' => [
      'variables' => [
        'content' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_entity_extra_field_info().
 */
function dh_certificate_entity_extra_field_info() {
  // Remove the entire extra fields array since we don't want automatic placement
  return [];
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function dh_certificate_user_view(array &$build, $account, $display, $view_mode) {
  // Remove the automatic progress block placement
  return;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 */
function dh_certificate_theme_suggestions_dh_certificate_progress_block(array $variables) {
  $suggestions = [];
  if (!empty($variables['progress'])) {
    $suggestions[] = 'dh_certificate_progress_block__' . $variables['progress']->bundle();
  }
  return $suggestions;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function dh_certificate_preprocess_certificate_progress_block(&$variables) {
  $user = \Drupal::currentUser();
  $progress_service = \Drupal::service('dh_certificate.progress');
  
  $variables['is_admin'] = $user->hasPermission('administer dh certificate');
  $raw_progress = $progress_service->getUserProgress($user);
  
  $variables['progress'] = [
    'total_courses' => $raw_progress['total_courses'] ?? 0,
    'completed_courses' => $raw_progress['completed_courses'] ?? 0,
    'total_credits' => $raw_progress['total_credits'] ?? 0,
    'required_credits' => $raw_progress['required_credits'] ?? 12,
    'percentage' => $raw_progress['total_percentage'] ?? 0,
    'pending_actions' => $raw_progress['pending_actions'] ?? 0,
    'courses' => array_map(function($course) {
      return [
        'id' => $course['id'] ?? '',  // Ensure ID is included
        'title' => $course['title'] ?? '',
        'status' => $course['status'] ?? 'pending',
        'credits' => $course['credits'] ?? 0,
        'mnemonic' => $course['mnemonic'] ?? '',
      ];
    }, $raw_progress['courses'] ?? [])
  ];

  // Add URLs using the URL generator service
  $variables['manage_url'] = \Drupal::service('url_generator')->generateFromRoute('dh_certificate.user_progress');
  
  // Add classes array if not set
  if (!isset($variables['attributes']['class'])) {
    $variables['attributes']['class'] = [];
  }
  $variables['attributes']['class'][] = 'certificate-progress-block';
  
  // Add required libraries
  $variables['#attached']['library'][] = 'dh_certificate/certificate-progress';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function dh_certificate_preprocess_certificate_progress_detail(&$variables) {
  $variables['#attached']['library'][] = 'dh_certificate/certificate-progress';
  
  if (!empty($variables['progress'])) {
    $progress_manager = \Drupal::service('dh_certificate.progress_manager');
    $variables['requirements'] = $progress_manager->getRequirementsByCategory($variables['progress']);
    $variables['remaining_requirements'] = $progress_manager->getRemainingRequirements($variables['progress']);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function dh_certificate_preprocess_dh_certificate_progress(&$variables) {
  // Removed detailed debug logging to prevent memory issues
  if (!empty($variables['debug'])) {
    \Drupal::logger('dh_certificate')->debug('Debug enabled for certificate progress');
  }
}

/**
 * Prepares variables for dh_certificate_progress template.
 */
function template_preprocess_dh_certificate_progress(&$variables) {
  // Ensure admin_url is available to the template
  if (!isset($variables['admin_url'])) {
    $variables['admin_url'] = NULL;
  }
}

/**
 * Implements hook_help().
 */
function dh_certificate_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.dh_certificate':
      return '<p>' . t('The Digital Humanities Certificate module manages student progress tracking and certificate requirements.') . '</p>';
    
    case 'dh_certificate.admin':
      return '<p>' . t('Configure certificate requirements and manage student progress.') . '</p>';
  }
}

/**
 * Implements hook_page_attachments().
 */
function dh_certificate_page_attachments(array &$attachments) {
  // Attach the debug-tree library to all pages
  $attachments['#attached']['library'][] = 'dh_certificate/debug-tree';
}

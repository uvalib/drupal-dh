<?php

/**
 * @file
 * Install, update and uninstall functions for the DH Certificate module.
 */

/**
 * Implements hook_schema().
 */
function dh_certificate_schema() {
  return [
    'course_enrollment' => [
      'description' => 'Stores course enrollment information.',
      'fields' => [
        'id' => [
          'type' => 'serial',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'description' => 'Primary Key: Unique enrollment ID.',
        ],
        'uid' => [
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'description' => 'The {users}.uid that enrolled.',
        ],
        'course_id' => [
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'description' => 'The {node}.nid of the course.',
        ],
        'status' => [
          'type' => 'varchar',
          'length' => 32,
          'not null' => TRUE,
          'default' => 'pending',
          'description' => 'The enrollment status.',
        ],
        'completed_date' => [
          'type' => 'int',
          'not null' => FALSE,
          'description' => 'Completion timestamp.',
        ],
        'created' => [
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
          'description' => 'Creation timestamp.',
        ],
        'changed' => [
          'type' => 'int',
          'not null' => TRUE,
          'default' => 0,
          'description' => 'Last modified timestamp.',
        ],
      ],
      'primary key' => ['id'],
      'indexes' => [
        'enrollment_user' => ['uid'],
        'enrollment_course' => ['course_id'],
        'enrollment_status' => ['status'],
        'enrollment_user_course' => ['uid', 'course_id'],
      ],
    ],
  ];
}

/**
 * Implements hook_install().
 */
function dh_certificate_install() {
  $schema = \Drupal::database()->schema();
  $definition = dh_certificate_schema();

  try {
    if (!$schema->tableExists('course_enrollment')) {
      $schema->createTable('course_enrollment', $definition['course_enrollment']);
    }

    // Install default config
    \Drupal::service('config.installer')
      ->installDefaultConfig('module', 'dh_certificate');

    // Ensure admin role has all permissions
    $admin_role = \Drupal::entityTypeManager()->getStorage('user_role')->load('administrator');
    if ($admin_role) {
      $permissions = [
        'administer dh certificate',
        'administer dh certificate settings',
        'administer dh certificate requirements',
        'administer dh certificate courses',
        'view certificate progress',
        'view own certificate progress',
      ];
      foreach ($permissions as $permission) {
        $admin_role->grantPermission($permission);
      }
      $admin_role->save();
      \Drupal::logger('dh_certificate')->notice('Added DH Certificate permissions to administrator role');
    }
  }
  catch (\Exception $e) {
    \Drupal::logger('dh_certificate')->error(
      'Installation failed: @error', ['@error' => $e->getMessage()]
    );
    throw $e;
  }
}

/**
 * Implements hook_uninstall().
 */
function dh_certificate_uninstall() {
  $database = \Drupal::database();
  $schema = $database->schema();

  try {
    $database->query('SET FOREIGN_KEY_CHECKS = 0');

    // Drop tables
    $tables = ['course_enrollment', 'dh_certificate_progress', 'student_progress'];
    foreach ($tables as $table) {
      if ($schema->tableExists($table)) {
        $schema->dropTable($table);
      }
    }

    // Clean up state data
    \Drupal::state()->deleteMultiple([
      'dh_certificate.progress',
      'dh_certificate.completion_deadline',
      'dh_certificate.last_sync',
    ]);
  }
  finally {
    $database->query('SET FOREIGN_KEY_CHECKS = 1');
  }
}

/**
 * Implements hook_requirements().
 */
function dh_certificate_requirements($phase) {
  if ($phase !== 'runtime') {
    return [];
  }

  $requirements = [];
  $fields = \Drupal::service('entity_field.manager')
    ->getFieldDefinitions('node', 'course');

  // Check required fields
  $required = [
    'field_course_code' => 'string',
    'field_credits' => 'integer',
    'field_course_status' => 'list_string',
  ];

  foreach ($required as $field => $type) {
    if (!isset($fields[$field]) || $fields[$field]->getType() !== $type) {
      $requirements['dh_certificate_' . $field] = [
        'title' => t('Certificate Course Field'),
        'description' => t('Field @field is missing or has wrong type', ['@field' => $field]),
        'severity' => REQUIREMENT_WARNING,
      ];
    }
  }

  return $requirements;
}

/**
 * Ensures course_enrollment table exists.
 */
function dh_certificate_update_8001() {
  $schema = \Drupal::database()->schema();
  if (!$schema->tableExists('course_enrollment')) {
    $schema->createTable('course_enrollment', dh_certificate_schema()['course_enrollment']);
  }
}